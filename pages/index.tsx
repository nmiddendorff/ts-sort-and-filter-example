import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import { sortAndFilter } from "../helpers/sortAndFilter";
import { person } from "../models/person";
import Image from "next/image";
import { Spinner } from "../components/Spinner";

const Home: NextPage = () => {
  const [data, setData] = useState<person[]>([]);
  const [filteredData, setFilteredData] = useState<person[]>([]);
  const [loadingState, setLoadingState] = useState(false);
  const [searchInput, setsearchInput] = useState("");
  const [resultsDirection, setResultsDirection] = useState("Default");

  useEffect(() => {
    setLoadingState(true);
    fetch("https://reqres.in/api/users?page=2")
      .then((res) => res.json())
      .then((response) => {
        setData(response.data);
        setLoadingState(false);
      });
  }, []);

  useEffect(() => {
    setFilteredData(sortAndFilter(searchInput, resultsDirection, data));
  }, [searchInput, resultsDirection, data]);

  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {
    const enteredName = event.target.value;

    setsearchInput(enteredName);
  };

  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {
    const sortOption = event.target.value;

    setResultsDirection(sortOption);
  };

  const sortOptions: string[] = ["Default", "AZ", "ZA"];

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {loadingState ? <Spinner /> : null}
        <div className={styles.peopleContainer}>
          <input
            data-testid="searchInput"
            className={styles.searchInput}
            value={searchInput}
            onChange={inputHandler}
          />
          <select
            onChange={selectHandler}
            name="cars"
            defaultValue={resultsDirection}
          >
            {sortOptions.map((option) => {
              return (
                <option key={option} value={option}>
                  {option}
                </option>
              );
            })}
          </select>
          {filteredData.map((item) => {
            return (
              <div className={styles.personCard} key={item.id}>
                <Image
                  className={styles.imageContainer}
                  layout="fixed"
                  height="50"
                  width="50"
                  data-testid="avatar"
                  src={item.avatar}
                  alt={item.first_name}
                />
                <div className={styles.cardInfoBlock}>
                  <div className={styles.personName}>{item.first_name}</div>
                  <div className={styles.email}>{item.email}</div>
                </div>
              </div>
            );
          })}
        </div>
        <pre data-testid="rawJson">{JSON.stringify(data, null, 2)}</pre>
      </main>
    </div>
  );
};

export default Home;
