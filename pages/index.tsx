import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { FC, useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'

const Spinner = () => 
  <span className={styles.spinner}></span>


  // https://jsonplaceholder.typicode.com/users

interface person {
  name: string
  id: string
  email: string
}

const Home: NextPage = () => {
  const [data, setData] = useState<person[]>([]);
  const [filteredData, setFilteredData] = useState<person[]>([]);
  const [loadingState, setLoadingState] = useState(false);
  const [searchInput, setsearchInput] = useState('');
  const [resultsDirection, setResultsDirection] = useState('Default');

  useEffect(() => {
    setLoadingState(true)
    fetch('https://jsonplaceholder.typicode.com/users')
      .then((res) => res.json())
      .then((data) => {
        setData(data)
        setFilteredData(data)
        setLoadingState(false)
      })
  }, [])


  const sortAndFilter = (enteredName: string, sortOption: string) => {
    const lowerCaseInput = enteredName.toLowerCase();

    let dataSorted = [...data];

    if (sortOption === 'Default'){
      console.log(data)
      dataSorted = data;
    } else {
      dataSorted = dataSorted.sort(function(a, b){
        if(sortOption === 'AZ'){
          if(a.name < b.name) { return -1; }
          if(a.name > b.name) { return 1; }
        } else if(sortOption === 'ZA'){
          if(a.name < b.name) { return 1; }
          if(a.name > b.name) { return -1; }
        }
        return 0;
      })
    }

    const foundItems = dataSorted.filter(function(user) {

      return user.name.toLowerCase().indexOf(lowerCaseInput) > -1; 
    });

    setFilteredData(foundItems);
  }

  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {
    const enteredName = event.target.value;

    setsearchInput(enteredName);
    sortAndFilter(enteredName, resultsDirection);
  };

  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {
    const sortOption = event.target.value;

    setResultsDirection(sortOption);
    sortAndFilter(searchInput, sortOption);
  };

  const sortOptions: string[] = ['Default', 'AZ', 'ZA'];

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      {
        loadingState ? <Spinner /> : null
      }
      <div className={styles.peopleContainer}>
        <input className={styles.searchInput} value={searchInput} onChange={inputHandler} />
        <select onChange={selectHandler} name="cars" defaultValue={resultsDirection} >
          {sortOptions.map((option) => { 
              return (<option key={option} value={option}>{option}</option>);
          })}
        </select>
        { 
          filteredData.map((item) => {
            return <div className={styles.personCard} key={item.id}>
              <div className={styles.personName}>{item.name}</div>
              <div className={styles.email}>{item.email}</div>
            </div>
          })
        }  
      </div>
      <pre>{JSON.stringify(data,  null, 2)}</pre>
      </main>

    </div>
  )
}

export default Home
